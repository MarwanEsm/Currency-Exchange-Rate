[{"C:\\Users\\marwa\\OneDrive\\Desktop\\Projects\\Currency Exchange App\\my-App\\src\\index.js":"1","C:\\Users\\marwa\\OneDrive\\Desktop\\Projects\\Currency Exchange App\\my-App\\src\\App.js":"2","C:\\Users\\marwa\\OneDrive\\Desktop\\Projects\\Currency Exchange App\\my-App\\src\\reportWebVitals.js":"3","C:\\Users\\marwa\\OneDrive\\Desktop\\Projects\\Currency Exchange App\\my-app\\src\\index.js":"4","C:\\Users\\marwa\\OneDrive\\Desktop\\Projects\\Currency Exchange App\\my-app\\src\\reportWebVitals.js":"5","C:\\Users\\marwa\\OneDrive\\Desktop\\Projects\\Currency Exchange App\\my-app\\src\\App.js":"6","C:\\Users\\marwa\\OneDrive\\Desktop\\Projects\\Currency Exchange App\\my-app\\src\\Components\\CurrenciesContext.js":"7","C:\\Users\\marwa\\OneDrive\\Desktop\\Projects\\Currency Exchange App\\my-app\\src\\Firstscreen\\LandingScreen.js":"8","C:\\Users\\marwa\\OneDrive\\Desktop\\Projects\\Currency Exchange App\\my-app\\src\\Firstscreen\\DateAndTime.js":"9","C:\\Users\\marwa\\OneDrive\\Desktop\\Projects\\Currency Exchange App\\my-app\\src\\Firstscreen\\Icon.js":"10","C:\\Users\\marwa\\OneDrive\\Desktop\\Projects\\Currency Exchange App\\my-app\\src\\Firstscreen\\LoginButton.js":"11","C:\\Users\\marwa\\OneDrive\\Desktop\\Projects\\Currency Exchange App\\my-app\\src\\LogInscreen\\LogInScreen.js":"12","C:\\Users\\marwa\\OneDrive\\Desktop\\Projects\\Currency Exchange App\\my-app\\src\\CurrenciesListscreen\\CurrenciesList.js":"13","C:\\Users\\marwa\\OneDrive\\Desktop\\Projects\\Currency Exchange App\\my-app\\src\\CurrenciesListscreen\\CurrenciesListScreen.js":"14","C:\\Users\\marwa\\OneDrive\\Desktop\\Projects\\Currency Exchange App\\my-app\\src\\Firstscreen\\RegistrationLink.js":"15","C:\\Users\\marwa\\OneDrive\\Desktop\\Projects\\Currency Exchange App\\my-app\\src\\RegistrationScreen\\RegistrationScreen.js":"16","C:\\Users\\marwa\\OneDrive\\Desktop\\Projects\\Currency Exchange App\\my-app\\src\\CurrenciesListscreen\\ExchangeRateList.js":"17","C:\\Users\\marwa\\OneDrive\\Desktop\\Projects\\Currency Exchange App\\my-app\\src\\CurrenciesListscreen\\Converter.js":"18","C:\\Users\\marwa\\OneDrive\\Desktop\\Projects\\Currency Exchange App\\my-app\\src\\LogInscreen\\ResetPassword.js":"19","C:\\Users\\marwa\\OneDrive\\Desktop\\Projects\\Currency Exchange App\\my-app\\src\\Firebase\\FireBaseAuth.js":"20","C:\\Users\\marwa\\OneDrive\\Desktop\\Projects\\Currency Exchange App\\my-app\\src\\Firebase\\FirebaseConfig.js":"21","C:\\Users\\marwa\\OneDrive\\Desktop\\Projects\\Currency Exchange App\\my-app\\src\\ChatForum\\ChatScreen.js":"22","C:\\Users\\marwa\\OneDrive\\Desktop\\Projects\\Currency Exchange App\\my-app\\src\\Firebase\\ChatContext.js":"23"},{"size":500,"mtime":499162500000,"results":"24","hashOfConfig":"25"},{"size":607,"mtime":1611067847036,"results":"26","hashOfConfig":"25"},{"size":362,"mtime":499162500000,"results":"27","hashOfConfig":"25"},{"size":500,"mtime":499162500000,"results":"28","hashOfConfig":"29"},{"size":362,"mtime":499162500000,"results":"30","hashOfConfig":"29"},{"size":1911,"mtime":1613036768250,"results":"31","hashOfConfig":"29"},{"size":1192,"mtime":1611934372666,"results":"32","hashOfConfig":"29"},{"size":388,"mtime":1612799231295,"results":"33","hashOfConfig":"29"},{"size":1178,"mtime":1612512054457,"results":"34","hashOfConfig":"29"},{"size":455,"mtime":1611657621503,"results":"35","hashOfConfig":"29"},{"size":591,"mtime":1612512016711,"results":"36","hashOfConfig":"29"},{"size":2663,"mtime":1613032495026,"results":"37","hashOfConfig":"29"},{"size":1190,"mtime":1612889879466,"results":"38","hashOfConfig":"29"},{"size":480,"mtime":1612889873568,"results":"39","hashOfConfig":"29"},{"size":589,"mtime":1612513211329,"results":"40","hashOfConfig":"29"},{"size":6748,"mtime":1613031522836,"results":"41","hashOfConfig":"29"},{"size":3341,"mtime":1613035336899,"results":"42","hashOfConfig":"29"},{"size":1932,"mtime":1613033666946,"results":"43","hashOfConfig":"29"},{"size":1779,"mtime":1612960742365,"results":"44","hashOfConfig":"29"},{"size":2064,"mtime":1613047584315,"results":"45","hashOfConfig":"29"},{"size":493,"mtime":1612785481175,"results":"46","hashOfConfig":"29"},{"size":2258,"mtime":1613050419677,"results":"47","hashOfConfig":"29"},{"size":1709,"mtime":1613050311662,"results":"48","hashOfConfig":"29"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"m5048c",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},"1h29oar",{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"57"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"57"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\marwa\\OneDrive\\Desktop\\Projects\\Currency Exchange App\\my-App\\src\\index.js",[],"C:\\Users\\marwa\\OneDrive\\Desktop\\Projects\\Currency Exchange App\\my-App\\src\\App.js",[],"C:\\Users\\marwa\\OneDrive\\Desktop\\Projects\\Currency Exchange App\\my-App\\src\\reportWebVitals.js",[],"C:\\Users\\marwa\\OneDrive\\Desktop\\Projects\\Currency Exchange App\\my-app\\src\\index.js",[],["98","99"],"C:\\Users\\marwa\\OneDrive\\Desktop\\Projects\\Currency Exchange App\\my-app\\src\\reportWebVitals.js",[],"C:\\Users\\marwa\\OneDrive\\Desktop\\Projects\\Currency Exchange App\\my-app\\src\\App.js",[],"C:\\Users\\marwa\\OneDrive\\Desktop\\Projects\\Currency Exchange App\\my-app\\src\\Components\\CurrenciesContext.js",[],"C:\\Users\\marwa\\OneDrive\\Desktop\\Projects\\Currency Exchange App\\my-app\\src\\Firstscreen\\LandingScreen.js",[],"C:\\Users\\marwa\\OneDrive\\Desktop\\Projects\\Currency Exchange App\\my-app\\src\\Firstscreen\\DateAndTime.js",[],"C:\\Users\\marwa\\OneDrive\\Desktop\\Projects\\Currency Exchange App\\my-app\\src\\Firstscreen\\Icon.js",[],"C:\\Users\\marwa\\OneDrive\\Desktop\\Projects\\Currency Exchange App\\my-app\\src\\Firstscreen\\LoginButton.js",[],"C:\\Users\\marwa\\OneDrive\\Desktop\\Projects\\Currency Exchange App\\my-app\\src\\LogInscreen\\LogInScreen.js",[],"C:\\Users\\marwa\\OneDrive\\Desktop\\Projects\\Currency Exchange App\\my-app\\src\\CurrenciesListscreen\\CurrenciesList.js",[],"C:\\Users\\marwa\\OneDrive\\Desktop\\Projects\\Currency Exchange App\\my-app\\src\\CurrenciesListscreen\\CurrenciesListScreen.js",[],"C:\\Users\\marwa\\OneDrive\\Desktop\\Projects\\Currency Exchange App\\my-app\\src\\Firstscreen\\RegistrationLink.js",[],"C:\\Users\\marwa\\OneDrive\\Desktop\\Projects\\Currency Exchange App\\my-app\\src\\RegistrationScreen\\RegistrationScreen.js",["100"],"import React, { useState, useContext } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Popup from \"reactjs-popup\";\r\nimport \"reactjs-popup/dist/index.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { AuthContext } from \"../Firebase/FireBaseAuth\";\r\n\r\nfunction RegistrationScreen() {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const closePopup = (event) => {\r\n    event.preventDefault();\r\n    setOpen(true);\r\n    \r\n  };\r\n\r\n  const { register } = useContext(AuthContext);\r\n\r\n  const [state, setState] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    passwordConfirmation: \"\",\r\n    country: \"\",\r\n    city: \"\",\r\n    zip: \"\",\r\n    checked: false,\r\n  });\r\n\r\n  const changeInput = (event) => {\r\n    const value = event.target.value;\r\n    event.preventDefault();\r\n\r\n    setState({\r\n      ...state,\r\n      [event.target.name]: value,\r\n    });\r\n  };\r\n\r\n  const preventReload = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  const makeItChecked = () => {\r\n    setState({ ...state, checked: !state.checked });\r\n  };\r\n  const handleRegister = () => {\r\n    register(state);\r\n    alert(\"thank you for submitting your details\");\r\n  };\r\n\r\n  const isInvalid =\r\n    state.firstName === \"\" ||\r\n    state.lastName === \"\" ||\r\n    state.password === \"\" ||\r\n    state.passwordConfirmation !== state.password ||\r\n    state.country === \"\" ||\r\n    state.city === \"\" ||\r\n    state.zip === \"\" ||\r\n    state.checked === false;\r\n\r\n  return (\r\n    <div>\r\n      <div style={divStyle}>\r\n        <Form>\r\n          <Form.Row>\r\n            <Form.Group as={Col} controlId=\"formGridfName\">\r\n              <Form.Label>First Name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"firstName\"\r\n                value={state.firstName}\r\n                onChange={changeInput}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group as={Col} controlId=\"formGridlName\">\r\n              <Form.Label>Last Name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"lastName\"\r\n                value={state.lastName}\r\n                onChange={changeInput}\r\n              />\r\n            </Form.Group>\r\n          </Form.Row>\r\n          <Form.Row>\r\n            <Form.Group as={Col} controlId=\"formGridEmail\">\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                name=\"email\"\r\n                value={state.email}\r\n                onChange={changeInput}\r\n              />\r\n            </Form.Group>\r\n          </Form.Row>\r\n          <Form.Row>\r\n            <Form.Group as={Col} controlId=\"formGridPassword\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                name=\"password\"\r\n                value={state.password}\r\n                onChange={changeInput}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group as={Col} controlId=\"formGridConfirmPassword\">\r\n              <Form.Label>Confirm Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                name=\"passwordConfirmation\"\r\n                value={state.passwordConfirmation}\r\n                onChange={changeInput}\r\n              />\r\n            </Form.Group>\r\n          </Form.Row>\r\n\r\n          <Form.Row>\r\n            <Form.Group as={Col} controlId=\"formGridCity\">\r\n              <Form.Label>Country</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"country\"\r\n                value={state.country}\r\n                onChange={changeInput}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group as={Col} controlId=\"formGridState\">\r\n              <Form.Label>City</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"city\"\r\n                value={state.city}\r\n                onChange={changeInput}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group as={Col} controlId=\"formGridZip\">\r\n              <Form.Label>Zip</Form.Label>\r\n              <Form.Control\r\n                type=\"number\"\r\n                name=\"zip\"\r\n                value={state.zip}\r\n                onChange={changeInput}\r\n              />\r\n            </Form.Group>\r\n          </Form.Row>\r\n\r\n          <div>\r\n            <Form.Group controlId=\"formBasicCheckbox\" style={groupStyle}>\r\n              <Form.Check\r\n                onClick={makeItChecked}\r\n                defaultChecked={state.checked}\r\n                type=\"checkbox\"\r\n              />\r\n              <Popup\r\n                open={open}\r\n                trigger={\r\n                  <a href=\"\" style={a1Style} onClick={preventReload}>\r\n                    Agree to terms and conditions\r\n                  </a>\r\n                }\r\n                position=\"center-top\"\r\n              >\r\n                <Terms closePopup={closePopup} />\r\n              </Popup>\r\n            </Form.Group>\r\n          </div>\r\n\r\n          <Button\r\n            variant=\"warning\"\r\n            type=\"submit\"\r\n            style={buttonStyle}\r\n            onClick={handleRegister}\r\n            disabled={isInvalid}\r\n          >\r\n            Register\r\n          </Button>\r\n        </Form>\r\n        <br />\r\n\r\n        <a href=\"/LogInScreen\" style={aStyle}>\r\n          Back to Log in\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Terms({ closePopup }) {\r\n  return (\r\n    <div>\r\n      <p style={pStyle}>Terms Of Service</p>\r\n      <h3 style={h3Style}>\r\n        Make sure you're enjoying your life and enjoy using this App either :)\r\n      </h3>\r\n      <Button\r\n        variant=\"warning\"\r\n        type=\"submit\"\r\n        style={buttonStyle}\r\n        onClick={closePopup}\r\n      >\r\n        Accept\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst pStyle = {\r\n  marginTop: \"20%\",\r\n  fontWeight: \"bold\",\r\n  fontSize: 13,\r\n};\r\n\r\nconst divStyle = {\r\n  marginLeft: \"5%\",\r\n  marginRight: \"5%\",\r\n  marginTop: \"10%\",\r\n  marginBottom: \"15%\",\r\n};\r\n\r\nconst aStyle = {\r\n  fontFamily: \"Trebuchet MS, sans-serif \",\r\n  fontSize: 13,\r\n  textDecoration: \"underline\",\r\n  paddingTop: 10,\r\n  paddingBottom: 20,\r\n  color: \"#ff8000\",\r\n};\r\nconst buttonStyle = {\r\n  marginTop: 20,\r\n  fontFamily: \"Helvetica\",\r\n  fontWeight: \"bold\",\r\n  fontSize: 15,\r\n};\r\n\r\nconst groupStyle = {\r\n  display: \"flex\",\r\n  justifyContent: \"center\",\r\n  width: \"70%\",\r\n  marginLeft: \"15%\",\r\n  textDecoration: \"underline\",\r\n  fontSize: 12,\r\n};\r\n\r\nconst a1Style = {\r\n  color: \"black\",\r\n  cursor: \"pointer\",\r\n};\r\n\r\nconst h3Style = {\r\n  fontSize: 15,\r\n};\r\n\r\nexport default RegistrationScreen;\r\n","C:\\Users\\marwa\\OneDrive\\Desktop\\Projects\\Currency Exchange App\\my-app\\src\\CurrenciesListscreen\\ExchangeRateList.js",["101"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { CurrenciesContext } from \"../Components/CurrenciesContext\";\r\nimport Convert from \"./Converter\";\r\nimport firebase from \"../Firebase/FirebaseConfig\";\r\n\r\n\r\n\r\nfunction ExchangeRateList() {\r\n  const { fetchExchangeRate, exchangeRates } = useContext(CurrenciesContext);\r\n  const { currency } = useParams();\r\n\r\n  useEffect(() => {\r\n    fetchExchangeRate(currency);\r\n  }, []);\r\n\r\n  const [searchedCurrency, setSearchedCurrency] = useState(\"\");\r\n\r\n  const handleSearch = (event) => {\r\n    const searchValue = event.target.value;\r\n    setSearchedCurrency(searchValue);\r\n  };\r\n\r\n  const displayInSearchBar = (event) => {\r\n    setSearchedCurrency(event.target.value);\r\n  };\r\n\r\n  const filteredRates = () => {\r\n    const result = Object.keys(exchangeRates.rates).filter((rate) => {\r\n      return (\r\n        exchangeRates.currency !== rate &&\r\n        rate.includes(searchedCurrency.toUpperCase())\r\n      );\r\n    });\r\n\r\n    return result;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2 style={h2Style}>Selected currency </h2>\r\n      <h3 style={h3Style}>{currency} </h3>\r\n      <h2 style={h2Style}>Conversion currency</h2>\r\n      <input\r\n        id=\"search\"\r\n        type=\"text\"\r\n        placeholder=\"Type here\"\r\n        value={searchedCurrency}\r\n        onChange={handleSearch}\r\n        className=\"form-control\"\r\n        style={inputStyle}\r\n      />\r\n\r\n      <br />\r\n      <br />\r\n      <div>\r\n        {exchangeRates &&\r\n          filteredRates().map((key, i) => (\r\n            <div key={i}>\r\n              <p>\r\n                <button\r\n                  className=\"badge badge-pill badge-primary\"\r\n                  style={spanStyle}\r\n                  value={key}\r\n                  onClick={displayInSearchBar}\r\n                >\r\n                  {key} &nbsp;\r\n                </button>{\" \"}\r\n                <span\r\n                  className=\"badge badge-pill badge-warning\"\r\n                  style={spanStyle}\r\n                >\r\n                  {parseFloat(exchangeRates.rates[key]).toFixed(8)}\r\n                </span>\r\n              </p>\r\n            </div>\r\n          ))}\r\n        <Convert searchedCurrency={searchedCurrency} />\r\n      </div>\r\n\r\n      <div style={divStyle}>\r\n        <a href=\"/\" style={aStyle} onClick={()=> firebase.auth().signOut()}>\r\n          Logout\r\n        </a>\r\n        <a href=\"/ChatScreen\" style={aStyle}>\r\n          Chat with us\r\n        </a>\r\n      </div>\r\n      <br />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst spanStyle = {\r\n  fontSize: 15,\r\n  fontFamily: \"DejaVu Sans Mono, monospace\",\r\n  wordSpacing: \"5 em\",\r\n  margin: 20,\r\n};\r\n\r\nconst h2Style = {\r\n  fontFamily: \"Apple Color Emoji \",\r\n  fontSize: 20,\r\n  fontWeight: \"bold\",\r\n  marginTop: \"9%\",\r\n};\r\n\r\nconst inputStyle = {\r\n  marginTop: \"4%\",\r\n  marginLeft: \"35%\",\r\n  width: \"30%\",\r\n  border: \"bold\",\r\n};\r\n\r\nconst h3Style = {\r\n  fontFamily: \"Apple Color Emoji \",\r\n  fontSize: 20,\r\n  fontWeight: \"bold\",\r\n  color: \"#ff8000\",\r\n  marginTop: \"3%\",\r\n};\r\n\r\nconst aStyle = {\r\n  fontFamily: \"Trebuchet MS, sans-serif \",\r\n  fontSize: 13,\r\n  textDecoration: \"underline\",\r\n  color: \"#ff8000\",\r\n  marginBottom: \"10%\",\r\n};\r\n\r\nconst divStyle = {\r\n  display: \"flex\",\r\n  justifyContent: \"space-around\",\r\n  alignItems: \"center\",\r\n};\r\n\r\nexport default ExchangeRateList;\r\n","C:\\Users\\marwa\\OneDrive\\Desktop\\Projects\\Currency Exchange App\\my-app\\src\\CurrenciesListscreen\\Converter.js",[],"C:\\Users\\marwa\\OneDrive\\Desktop\\Projects\\Currency Exchange App\\my-app\\src\\LogInscreen\\ResetPassword.js",[],"C:\\Users\\marwa\\OneDrive\\Desktop\\Projects\\Currency Exchange App\\my-app\\src\\Firebase\\FireBaseAuth.js",[],"C:\\Users\\marwa\\OneDrive\\Desktop\\Projects\\Currency Exchange App\\my-app\\src\\Firebase\\FirebaseConfig.js",[],"C:\\Users\\marwa\\OneDrive\\Desktop\\Projects\\Currency Exchange App\\my-app\\src\\ChatForum\\ChatScreen.js",["102"],"C:\\Users\\marwa\\OneDrive\\Desktop\\Projects\\Currency Exchange App\\my-app\\src\\Firebase\\ChatContext.js",["103","104"],{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":165,"column":19,"nodeType":"111","endLine":165,"endColumn":70},{"ruleId":"112","severity":1,"message":"113","line":15,"column":6,"nodeType":"114","endLine":15,"endColumn":8,"suggestions":"115"},{"ruleId":"116","severity":1,"message":"117","line":12,"column":11,"nodeType":"118","messageId":"119","endLine":12,"endColumn":26},{"ruleId":"116","severity":1,"message":"120","line":21,"column":9,"nodeType":"118","messageId":"119","endLine":21,"endColumn":16},{"ruleId":"116","severity":1,"message":"121","line":22,"column":11,"nodeType":"118","messageId":"119","endLine":22,"endColumn":15},"no-native-reassign",["122"],"no-negated-in-lhs",["123"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'currency' and 'fetchExchangeRate'. Either include them or remove the dependency array.","ArrayExpression",["124"],"no-unused-vars","'isAuthenticated' is assigned a value but never used.","Identifier","unusedVar","'histroy' is assigned a value but never used.","'user' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"125","fix":"126"},"Update the dependencies array to be: [currency, fetchExchangeRate]",{"range":"127","text":"128"},[485,487],"[currency, fetchExchangeRate]"]