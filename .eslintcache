[{"C:\\Users\\marwa\\OneDrive\\Desktop\\Projects\\Currency Exchange App\\my-App\\src\\index.js":"1","C:\\Users\\marwa\\OneDrive\\Desktop\\Projects\\Currency Exchange App\\my-App\\src\\App.js":"2","C:\\Users\\marwa\\OneDrive\\Desktop\\Projects\\Currency Exchange App\\my-App\\src\\reportWebVitals.js":"3","C:\\Users\\marwa\\OneDrive\\Desktop\\Projects\\Currency Exchange App\\my-app\\src\\index.js":"4","C:\\Users\\marwa\\OneDrive\\Desktop\\Projects\\Currency Exchange App\\my-app\\src\\reportWebVitals.js":"5","C:\\Users\\marwa\\OneDrive\\Desktop\\Projects\\Currency Exchange App\\my-app\\src\\App.js":"6","C:\\Users\\marwa\\OneDrive\\Desktop\\Projects\\Currency Exchange App\\my-app\\src\\Components\\CurrenciesContext.js":"7","C:\\Users\\marwa\\OneDrive\\Desktop\\Projects\\Currency Exchange App\\my-app\\src\\Firstscreen\\LandingScreen.js":"8","C:\\Users\\marwa\\OneDrive\\Desktop\\Projects\\Currency Exchange App\\my-app\\src\\Firstscreen\\DateAndTime.js":"9","C:\\Users\\marwa\\OneDrive\\Desktop\\Projects\\Currency Exchange App\\my-app\\src\\Firstscreen\\Icon.js":"10","C:\\Users\\marwa\\OneDrive\\Desktop\\Projects\\Currency Exchange App\\my-app\\src\\Firstscreen\\LoginButton.js":"11","C:\\Users\\marwa\\OneDrive\\Desktop\\Projects\\Currency Exchange App\\my-app\\src\\LogInscreen\\LogInScreen.js":"12","C:\\Users\\marwa\\OneDrive\\Desktop\\Projects\\Currency Exchange App\\my-app\\src\\CurrenciesListscreen\\CurrenciesList.js":"13","C:\\Users\\marwa\\OneDrive\\Desktop\\Projects\\Currency Exchange App\\my-app\\src\\CurrenciesListscreen\\CurrenciesListScreen.js":"14","C:\\Users\\marwa\\OneDrive\\Desktop\\Projects\\Currency Exchange App\\my-app\\src\\Firstscreen\\RegistrationLink.js":"15","C:\\Users\\marwa\\OneDrive\\Desktop\\Projects\\Currency Exchange App\\my-app\\src\\RegistrationScreen\\RegistrationScreen.js":"16","C:\\Users\\marwa\\OneDrive\\Desktop\\Projects\\Currency Exchange App\\my-app\\src\\CurrenciesListscreen\\ExchangeRateList.js":"17","C:\\Users\\marwa\\OneDrive\\Desktop\\Projects\\Currency Exchange App\\my-app\\src\\CurrenciesListscreen\\Converter.js":"18","C:\\Users\\marwa\\OneDrive\\Desktop\\Projects\\Currency Exchange App\\my-app\\src\\LogInscreen\\ResetPassword.js":"19","C:\\Users\\marwa\\OneDrive\\Desktop\\Projects\\Currency Exchange App\\my-app\\src\\Firebase\\FireBaseAuth.js":"20","C:\\Users\\marwa\\OneDrive\\Desktop\\Projects\\Currency Exchange App\\my-app\\src\\Firebase\\FirebaseConfig.js":"21","C:\\Users\\marwa\\OneDrive\\Desktop\\Projects\\Currency Exchange App\\my-app\\src\\ChatForum\\ChatScreen.js":"22","C:\\Users\\marwa\\OneDrive\\Desktop\\Projects\\Currency Exchange App\\my-app\\src\\Firebase\\ChatContext.js":"23"},{"size":500,"mtime":499162500000,"results":"24","hashOfConfig":"25"},{"size":607,"mtime":1611067847036,"results":"26","hashOfConfig":"25"},{"size":362,"mtime":499162500000,"results":"27","hashOfConfig":"25"},{"size":500,"mtime":499162500000,"results":"28","hashOfConfig":"29"},{"size":362,"mtime":499162500000,"results":"30","hashOfConfig":"29"},{"size":1911,"mtime":1613053127613,"results":"31","hashOfConfig":"29"},{"size":1192,"mtime":1611934372666,"results":"32","hashOfConfig":"29"},{"size":388,"mtime":1612799231295,"results":"33","hashOfConfig":"29"},{"size":1178,"mtime":1612512054457,"results":"34","hashOfConfig":"29"},{"size":455,"mtime":1611657621503,"results":"35","hashOfConfig":"29"},{"size":591,"mtime":1612512016711,"results":"36","hashOfConfig":"29"},{"size":2700,"mtime":1613056900843,"results":"37","hashOfConfig":"29"},{"size":1190,"mtime":1612889879466,"results":"38","hashOfConfig":"29"},{"size":522,"mtime":1613056533633,"results":"39","hashOfConfig":"29"},{"size":637,"mtime":1613114598980,"results":"40","hashOfConfig":"29"},{"size":6775,"mtime":1613114952167,"results":"41","hashOfConfig":"29"},{"size":3375,"mtime":1613056815578,"results":"42","hashOfConfig":"29"},{"size":1932,"mtime":1613033666946,"results":"43","hashOfConfig":"29"},{"size":1779,"mtime":1612960742365,"results":"44","hashOfConfig":"29"},{"size":2442,"mtime":1613055593500,"results":"45","hashOfConfig":"29"},{"size":493,"mtime":1612785481175,"results":"46","hashOfConfig":"29"},{"size":2392,"mtime":1613053407171,"results":"47","hashOfConfig":"29"},{"size":1709,"mtime":1613054926114,"results":"48","hashOfConfig":"29"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"m5048c",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},"1h29oar",{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"57"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"57"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"57"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"57"},"C:\\Users\\marwa\\OneDrive\\Desktop\\Projects\\Currency Exchange App\\my-App\\src\\index.js",[],"C:\\Users\\marwa\\OneDrive\\Desktop\\Projects\\Currency Exchange App\\my-App\\src\\App.js",[],"C:\\Users\\marwa\\OneDrive\\Desktop\\Projects\\Currency Exchange App\\my-App\\src\\reportWebVitals.js",[],"C:\\Users\\marwa\\OneDrive\\Desktop\\Projects\\Currency Exchange App\\my-app\\src\\index.js",[],["100","101"],"C:\\Users\\marwa\\OneDrive\\Desktop\\Projects\\Currency Exchange App\\my-app\\src\\reportWebVitals.js",[],"C:\\Users\\marwa\\OneDrive\\Desktop\\Projects\\Currency Exchange App\\my-app\\src\\App.js",[],"C:\\Users\\marwa\\OneDrive\\Desktop\\Projects\\Currency Exchange App\\my-app\\src\\Components\\CurrenciesContext.js",[],"C:\\Users\\marwa\\OneDrive\\Desktop\\Projects\\Currency Exchange App\\my-app\\src\\Firstscreen\\LandingScreen.js",[],"C:\\Users\\marwa\\OneDrive\\Desktop\\Projects\\Currency Exchange App\\my-app\\src\\Firstscreen\\DateAndTime.js",[],"C:\\Users\\marwa\\OneDrive\\Desktop\\Projects\\Currency Exchange App\\my-app\\src\\Firstscreen\\Icon.js",[],"C:\\Users\\marwa\\OneDrive\\Desktop\\Projects\\Currency Exchange App\\my-app\\src\\Firstscreen\\LoginButton.js",[],"C:\\Users\\marwa\\OneDrive\\Desktop\\Projects\\Currency Exchange App\\my-app\\src\\LogInscreen\\LogInScreen.js",[],"C:\\Users\\marwa\\OneDrive\\Desktop\\Projects\\Currency Exchange App\\my-app\\src\\CurrenciesListscreen\\CurrenciesList.js",[],"C:\\Users\\marwa\\OneDrive\\Desktop\\Projects\\Currency Exchange App\\my-app\\src\\CurrenciesListscreen\\CurrenciesListScreen.js",[],"C:\\Users\\marwa\\OneDrive\\Desktop\\Projects\\Currency Exchange App\\my-app\\src\\Firstscreen\\RegistrationLink.js",[],"C:\\Users\\marwa\\OneDrive\\Desktop\\Projects\\Currency Exchange App\\my-app\\src\\RegistrationScreen\\RegistrationScreen.js",[],"C:\\Users\\marwa\\OneDrive\\Desktop\\Projects\\Currency Exchange App\\my-app\\src\\CurrenciesListscreen\\ExchangeRateList.js",["102"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { CurrenciesContext } from \"../Components/CurrenciesContext\";\r\nimport Convert from \"./Converter\";\r\nimport firebase from \"../Firebase/FirebaseConfig\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nfunction ExchangeRateList() {\r\n  const { fetchExchangeRate, exchangeRates } = useContext(CurrenciesContext);\r\n  const { currency } = useParams();\r\n\r\n  useEffect(() => {\r\n    fetchExchangeRate(currency);\r\n  }, []);\r\n\r\n  const [searchedCurrency, setSearchedCurrency] = useState(\"\");\r\n\r\n  const handleSearch = (event) => {\r\n    const searchValue = event.target.value;\r\n    setSearchedCurrency(searchValue);\r\n  };\r\n\r\n  const displayInSearchBar = (event) => {\r\n    setSearchedCurrency(event.target.value);\r\n  };\r\n\r\n  const filteredRates = () => {\r\n    const result = Object.keys(exchangeRates.rates).filter((rate) => {\r\n      return (\r\n        exchangeRates.currency !== rate &&\r\n        rate.includes(searchedCurrency.toUpperCase())\r\n      );\r\n    });\r\n\r\n    return result;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2 style={h2Style}>Selected currency </h2>\r\n      <h3 style={h3Style}>{currency} </h3>\r\n      <h2 style={h2Style}>Conversion currency</h2>\r\n      <input\r\n        id=\"search\"\r\n        type=\"text\"\r\n        placeholder=\"Type here\"\r\n        value={searchedCurrency}\r\n        onChange={handleSearch}\r\n        className=\"form-control\"\r\n        style={inputStyle}\r\n      />\r\n\r\n      <br />\r\n      <br />\r\n      <div>\r\n        {exchangeRates &&\r\n          filteredRates().map((key, i) => (\r\n            <div key={i}>\r\n              <p>\r\n                <button\r\n                  className=\"badge badge-pill badge-primary\"\r\n                  style={spanStyle}\r\n                  value={key}\r\n                  onClick={displayInSearchBar}\r\n                >\r\n                  {key} &nbsp;\r\n                </button>{\" \"}\r\n                <span\r\n                  className=\"badge badge-pill badge-warning\"\r\n                  style={spanStyle}\r\n                >\r\n                  {parseFloat(exchangeRates.rates[key]).toFixed(8)}\r\n                </span>\r\n              </p>\r\n            </div>\r\n          ))}\r\n        <Convert searchedCurrency={searchedCurrency} />\r\n      </div>\r\n\r\n      <div style={divStyle}>\r\n        <Link to=\"/\" style={aStyle} onClick={()=> firebase.auth().signOut()}/>\r\n          Logout\r\n       \r\n        <Link to=\"/ChatScreen\" style={aStyle}/>\r\n          Chat with us\r\n       \r\n      </div>\r\n      <br />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst spanStyle = {\r\n  fontSize: 15,\r\n  fontFamily: \"DejaVu Sans Mono, monospace\",\r\n  wordSpacing: \"5 em\",\r\n  margin: 20,\r\n};\r\n\r\nconst h2Style = {\r\n  fontFamily: \"Apple Color Emoji \",\r\n  fontSize: 20,\r\n  fontWeight: \"bold\",\r\n  marginTop: \"9%\",\r\n};\r\n\r\nconst inputStyle = {\r\n  marginTop: \"4%\",\r\n  marginLeft: \"35%\",\r\n  width: \"30%\",\r\n  border: \"bold\",\r\n};\r\n\r\nconst h3Style = {\r\n  fontFamily: \"Apple Color Emoji \",\r\n  fontSize: 20,\r\n  fontWeight: \"bold\",\r\n  color: \"#ff8000\",\r\n  marginTop: \"3%\",\r\n};\r\n\r\nconst aStyle = {\r\n  fontFamily: \"Trebuchet MS, sans-serif \",\r\n  fontSize: 13,\r\n  textDecoration: \"underline\",\r\n  color: \"#ff8000\",\r\n  marginBottom: \"10%\",\r\n};\r\n\r\nconst divStyle = {\r\n  display: \"flex\",\r\n  justifyContent: \"space-around\",\r\n  alignItems: \"center\",\r\n};\r\n\r\nexport default ExchangeRateList;\r\n","C:\\Users\\marwa\\OneDrive\\Desktop\\Projects\\Currency Exchange App\\my-app\\src\\CurrenciesListscreen\\Converter.js",[],"C:\\Users\\marwa\\OneDrive\\Desktop\\Projects\\Currency Exchange App\\my-app\\src\\LogInscreen\\ResetPassword.js",[],"C:\\Users\\marwa\\OneDrive\\Desktop\\Projects\\Currency Exchange App\\my-app\\src\\Firebase\\FireBaseAuth.js",["103","104"],"import React, { createContext, useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport firebase from \"./FirebaseConfig\";\r\n\r\nconst initContext = {\r\n  user: null,\r\n  login: () => {\r\n    throw new Error(\"login () not implemented\");\r\n  },\r\n  register: () => {\r\n    throw new Error(\"register() not implemented\");\r\n  },\r\n};\r\n\r\nexport const AuthContext = createContext(initContext);\r\nexport const AuthContextProvider = ({ children }) => {\r\n  const db = firebase.firestore();\r\n  const [user, setUser] = useState(initContext.user);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n  let history = useHistory();\r\n  useEffect(() => {\r\n    firebase.auth().onAuthStateChanged(function (user) {\r\n      if (user) {\r\n        setUser(user);\r\n        setIsAuthenticated(true);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const register = ({ email, password, firstName, lastName }) => {\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then((userCredential) => {\r\n        var user = userCredential.user;\r\n        \r\n        user\r\n          .updateProfile({\r\n            displayName: firstName,\r\n            photoURL: \"https://example.com/jane-q-user/profile.jpg\",\r\n          })\r\n          .then(function () {\r\n           console.log(\"user\", user);\r\n            const { email, firstName } = user;\r\n            setUser( user );\r\n            setIsAuthenticated(true);\r\n          })\r\n          .catch(function (error) {});\r\n        db.collection(\"user\").doc(user.uid).set({\r\n          firstName: firstName,\r\n          lastName: lastName,\r\n        });\r\n      })\r\n\r\n      .catch((error) => {\r\n        var errorCode = error.code;\r\n        console.log(\"error\", errorCode);\r\n      });\r\n  };\r\n\r\n  const login = async ({ email, password }) => {\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then((userCredential) => {\r\n        const user = userCredential.user;\r\n        setUser(user);\r\n        console.log(user);\r\n        history.push(\"/CurrenciesListScreen\");\r\n      })\r\n      .catch((error) => {\r\n        var errorMessage = error.message;\r\n        alert(errorMessage, \"Please signup\");\r\n        console.log(\"error\", errorMessage);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, login, register, isAuthenticated }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContextProvider;\r\n","C:\\Users\\marwa\\OneDrive\\Desktop\\Projects\\Currency Exchange App\\my-app\\src\\Firebase\\FirebaseConfig.js",[],"C:\\Users\\marwa\\OneDrive\\Desktop\\Projects\\Currency Exchange App\\my-app\\src\\ChatForum\\ChatScreen.js",["105","106"],"import React, { useContext, useState } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { ChatContext } from \"../Firebase/ChatContext\";\r\nimport { AuthContext } from \"../Firebase/FireBaseAuth\";\r\nimport firebase from \"../Firebase/FirebaseConfig\";\r\n\r\nfunction ChatScreen() {\r\n  const { messages, writeMessages } = useContext(ChatContext);\r\n  const { user, isAuthenticated } = useContext(AuthContext);\r\n  const [body, setBody] = useState(\"\");\r\n\r\n  const updateText = (event) => {\r\n    const newText = event.target.value;\r\n    setBody(newText);\r\n  };\r\n\r\n  const handelWriteMessages = () => {\r\n    writeMessages(body);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div style={divStyle}>\r\n        <a href=\"/\" style={aStyle} onClick={() => firebase.auth().signOut()}>\r\n          Logout\r\n        </a>\r\n      </div>\r\n\r\n      <InputGroup className=\"mb-3\" style={contro1lStyle}>\r\n        <Form.Control\r\n          type=\"message\"\r\n          placeholder=\"Type your message\"\r\n          aria-describedby=\"basic-addon2\"\r\n          value={body}\r\n          onChange={updateText}\r\n        />\r\n        <InputGroup.Append>\r\n          <Button variant=\"outline-secondary\" onClick={handelWriteMessages}>\r\n            Send\r\n          </Button>\r\n        </InputGroup.Append>\r\n      </InputGroup>\r\n      {messages ? (\r\n        messages.map((message, index) => {\r\n          return (\r\n            <div>\r\n              <h1 style={h1Style}>{message.firstName}</h1>\r\n              <h2 style={h2Style}>{message.body}</h2>\r\n              {/* <h2 style={h2Style}>{message.timestamp}</h2> */}\r\n            </div>\r\n          );\r\n        })\r\n      ) : (\r\n        <h2>...Loading</h2>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst contro1lStyle = {\r\n  width: \"70%\",\r\n  marginBottom: \"10%\",\r\n  border: \"bold\",\r\n  marginRight: \"20%\",\r\n  marginTop: \"10%\",\r\n  marginLeft: \"20%\",\r\n};\r\n\r\nconst divStyle = {\r\n  display: \"flex\",\r\n  justifyContent: \"space-around\",\r\n  alignItems: \"center\",\r\n};\r\n\r\nconst aStyle = {\r\n  fontFamily: \"Trebuchet MS, sans-serif \",\r\n  fontSize: 13,\r\n  textDecoration: \"underline\",\r\n  color: \"#ff8000\",\r\n  marginBottom: \"10%\",\r\n  marginTop: \"10%\",\r\n};\r\n\r\n\r\nconst h2Style = {\r\n  fontSize: 15,\r\n  \r\n}\r\n\r\nconst h1Style = {\r\n  fontSize:12,\r\n}\r\nexport default ChatScreen;\r\n","C:\\Users\\marwa\\OneDrive\\Desktop\\Projects\\Currency Exchange App\\my-app\\src\\Firebase\\ChatContext.js",["107"],"import React, { createContext, useContext, useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { AuthContext } from \"../Firebase/FireBaseAuth\";\r\nimport firebase from \"../Firebase/FirebaseConfig\";\r\n\r\nconst initContext = {\r\n  messages: [],\r\n\r\n  getMessages: () => {\r\n    throw new Error(\"getMessages() is not implemented\");\r\n  },\r\n\r\n  writeMessages: () => {\r\n    throw new Error(\"write messages() is not implemented\");\r\n  },\r\n};\r\n\r\nexport const ChatContext = createContext(initContext);\r\nexport const ChatContextProvider = ({ children }) => {\r\n  const [messages, setMessages] = useState(initContext.messages);\r\n  const histroy = useHistory();\r\n  const { user } = useContext(AuthContext);\r\n  const db = firebase.firestore();\r\n  useEffect(() => {\r\n    getMessages();\r\n  });\r\n  const getMessages = () => {\r\n    db.collection(\"messages\")\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        const messagesArray = [];\r\n        querySnapshot.forEach((doc) => {\r\n          messagesArray.push(doc.data());\r\n        });\r\n        setMessages(messagesArray);\r\n      });\r\n  };\r\n\r\n  const writeMessages = async (body) => {\r\n    db.collection(\"messages\")\r\n      .add({\r\n        body,\r\n        firstName: user.displayName,\r\n        // timeStamp: new Date(),\r\n      })\r\n      .then((docRef) => {\r\n        console.log(\"Document written with ID: \", docRef.id);\r\n        getMessages();\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error adding document: \", error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <ChatContext.Provider value={{ messages, getMessages, writeMessages }}>\r\n      {children}\r\n    </ChatContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ChatContextProvider;\r\n",{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","severity":1,"message":"113","line":15,"column":6,"nodeType":"114","endLine":15,"endColumn":8,"suggestions":"115"},{"ruleId":"116","severity":1,"message":"117","line":45,"column":21,"nodeType":"118","messageId":"119","endLine":45,"endColumn":26},{"ruleId":"116","severity":1,"message":"120","line":45,"column":28,"nodeType":"118","messageId":"119","endLine":45,"endColumn":37},{"ruleId":"116","severity":1,"message":"121","line":12,"column":11,"nodeType":"118","messageId":"119","endLine":12,"endColumn":15},{"ruleId":"116","severity":1,"message":"122","line":12,"column":17,"nodeType":"118","messageId":"119","endLine":12,"endColumn":32},{"ruleId":"116","severity":1,"message":"123","line":21,"column":9,"nodeType":"118","messageId":"119","endLine":21,"endColumn":16},"no-native-reassign",["124"],"no-negated-in-lhs",["125"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'currency' and 'fetchExchangeRate'. Either include them or remove the dependency array.","ArrayExpression",["126"],"no-unused-vars","'email' is assigned a value but never used.","Identifier","unusedVar","'firstName' is assigned a value but never used.","'user' is assigned a value but never used.","'isAuthenticated' is assigned a value but never used.","'histroy' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"127","fix":"128"},"Update the dependencies array to be: [currency, fetchExchangeRate]",{"range":"129","text":"130"},[525,527],"[currency, fetchExchangeRate]"]